name: "Copilot Setup Steps"

# Automatically run the setup steps when they are changed to allow for easy validation, and
# allow manual testing through the repository's "Actions" tab
on:
  workflow_dispatch:
  push:
    paths:
      - .github/workflows/copilot-setup-steps.yml
  pull_request:
    paths:
      - .github/workflows/copilot-setup-steps.yml

jobs:
  # The job MUST be called `copilot-setup-steps` or it will not be picked up by Copilot.
  copilot-setup-steps:
    runs-on: ubuntu-latest

    # Set the permissions to the lowest permissions possible needed for your steps.
    # Copilot will be given its own token for its operations.
    permissions:
      # If you want to clone the repository as part of your setup steps, for example to install dependencies, you'll need the `contents: read` permission. If you don't clone the repository in your setup steps, Copilot will do this for you automatically after the steps complete.
      contents: read

    # You can define any steps you want, and they will run before the agent starts.
    # If you do not check out your code, Copilot will do this for you.
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Enable Corepack
        run: corepack enable

      - name: Install Yarn 4.x
        run: corepack prepare yarn@4 --activate

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "24"
          cache: "yarn"

      - name: Configure FontAwesome authentication
        run: yarn config set npmScopes.fortawesome.npmAuthToken ${{ secrets.FONT_AWESOME_TOKEN }} --home

      - name: Install dependencies
        run: yarn install --immutable

      - name: Create .env from secrets
        run: |
          {
            echo "AUTH0_MANAGEMENT_CLIENT_ID=${{ secrets.AUTH0_MANAGEMENT_CLIENT_ID }}";
            echo "AUTH0_MANAGEMENT_CLIENT_SECRET=${{ secrets.AUTH0_MANAGEMENT_CLIENT_SECRET }}";
            echo "CLIENT_ID=${{ secrets.CLIENT_ID }}";
            echo "CLIENT_SECRET=${{ secrets.CLIENT_SECRET }}";
            echo "DATABASE_URL=${{ secrets.DATABASE_URL }}";
            echo "FONT_AWESOME_TOKEN=${{ secrets.FONT_AWESOME_TOKEN }}";
            echo "NEON_API_KEY=${{ secrets.NEON_API_KEY }}";
            echo "STRIPE_API_KEY=${{ secrets.STRIPE_API_KEY }}";
          } > .env

      - name: Install Playwright browsers
        run: yarn playwright install --with-deps
